version: '3.4'

services:

  # Luigi runs as a service and must have jobs submitted to it
  # (`scripts/run.sh`)
  luigi:
    image: nsidc/luigi:dev
    build: .
    container_name: luigi
    volumes:
      # Code
      - ./:/luigi/tasks/qgreenland:ro
      # Luigi artifacts
      - ./luigi/conf:/etc/luigi:ro
      - ./luigi/state:/luigi/state:rw

      # Input (private) storage
      - ./data/private-archive:/private-archive:ro
      # Read-write storage
      - ./data/working-storage:/working-storage:rw
      # Temporary storage
      - /tmp_mnt:/qgr-tmp:rw
    environment:
      - QGR_TMP_DIR=/qgr-tmp
      - QGR_ENVIRONMENT=${ENVIRONMENT}
      - LUIGI_CONFIG_PARSER=toml
      - EARTHDATA_USERNAME
      - EARTHDATA_PASSWORD
      # Set `export PYTHONBREAKPOINT=ipdb.set_trace` to use `ipdb` by default
      # instead of `pdb`.
      - PYTHONBREAKPOINT
      # Needed to properly initialize QGIS Python library without a display
      - QT_QPA_PLATFORM=minimal
    ports:
      - 8082:8082
    logging:
      options:
        max-size: "20m"
        max-file: "5"
    restart: on-failure


  # QGreenland hosting
  webserver:
    image: nsidc/nginx:local
    build: ./nginx
    container_name: webserver 
    volumes:
      - ./data/working-storage/release-layers:/usr/share/nginx/html/layers:ro
      - ./data/working-storage/release-packages:/usr/share/nginx/html/packages:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/logs:/logs:rw
    ports:
      - 80:80
      - 443:443
    logging:
      options:
        max-size: "20m"
        max-file: "5"
    restart: on-failure
